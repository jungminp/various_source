[문제]
입력된 미로가 통과 가능한지 검사하는 프로그램을 아래 조건에 따라 작성하시오.

미로는 1행 이상의 문자열로 입력된다.
미로는 2차원 공간이며, 입력되는 문자열의 각 문자는 미로의 칸을 나타낸다.
각 문자는 다음을 의미한다.
# 통과 불가능
(공백) 통과 가능
< 시작 지점
> 목적 지점
미로의 외벽은 막혀있다.
한 위치에서 다른 위치로의 이동은 상하좌우로만 가능하며, 대각선 이동은 불가능하다.
미로가 통과 가능하면 true를, 통과 불가능하면 false를 출력한다.

<실행결과>
#######
#S    #
##### #
#     #
# #####
# #   #
# # # #
#   #E#
#######
Found 'E' at (5, 7)
########
#S     #
#  ##  #
#  ##  #
#     E#
########
Found 'E' at (6, 4)
<     >
Not found.
########
#<     #
#     ##
#    #>#
########
Not found.
'''

from findingLoad_sub import *

fp = open('data.txt', 'r')
strList = fp.read().splitlines()
fp.close()

for data in strList:
    isPossible(data)
    
    
checkPattern = [(0, -1), (-1, 0), (1, 0), (0, 1)]
checkedFlag = 'o'

def checkNode(datas, x, y):    
    datas[y][x] = checkedFlag   #체크한 좌표는 다시 체크 하지 않도록 하기위해 'o'로 변경시킨다. 
    for pattern in checkPattern:
        coord = (x + pattern[0], y + pattern[1])
        if (0 <= coord[1] < len(datas)) and (0 <= coord[0] < len(datas[coord[1]])):
            data = datas[coord[1]][coord[0]]
            
            if data != checkedFlag:                
                if data == "E": 
                    print("Found 'E' at", coord)
                    return True
                elif data == " ":
                    # recursive search
                    # 한 좌표에서 상하좌우를 조사하며 가능한 경로를 체크하도록 한다.
                    if checkNode(datas, coord[0], coord[1]):
                        return True
    return False


def isPossible(data):
    # 문자열 형태인 data를 리스트로 변환
    datas = [list(line) for line in data.split("|")]

    #미로 화면 출력
    for i in datas:
        print(''.join(list(i)))
        
    # 시작지점 "S"의 위치를 찾는다.
    sX, sY = 0, 0
    
    for y in range(len(datas)):
        if "S" in datas[y]:
            sX, sY = datas[y].index("S"), y
            
    # 찾기시작          
    if not checkNode(datas, sX, sY):
        print("Not found.")
    
