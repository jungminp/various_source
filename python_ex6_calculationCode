"""
 * [실습] Armstrong Number
 * 
 * Armstrong Number란, 임의의 어떤 수(x)와 그 수의 각 자리 수의 세제곱의 합이 같은 수를 말한다.
 *   예) x = 153 이라면, ( 1 * 1 * 1 ) + ( 5 * 5 * 5 ) + ( 3 * 3 * 3 ) = 153 으로 같으므로, 153은 Armstrong Number 이다.
 * 
 * 100부터 999까지의 숫자 중, Armstrong Number를 구한다.
 * 
 * 
 * [실행 결과]
 * 
 * 153
 * 370
 * 371
 * 407
 * 
 """

      
for inx in range(100, 1000, 1):                 # 100부터 999까지 반복         
     num1 = inx // 100                          # 백의 자리 숫자 분리
     num2 = (inx%100) // 10                     # 십의 자리 숫자 분리
     num3 = ( (inx%100) % 10)                   # 일의 자리 숫자 분리
            
            # 각 자리수 별로 분리한 숫자들의 세제곱의 합을 구한다.     
     result = (num1**3) + (num2**3) + (num3**3)  
            
     if(inx == result ):            
         print( inx )      
       



""
 * [실습] 제곱의 합과 합의 제곱
 * 
 * 1부터 5까지의 자연수를 각각 제곱하여 더한 것을 ‘제곱의 합’이라고 부른다.
 *    -> 1^2 + 2^2 + 3^2 + 4^2 + 5^2 = 55
 * 1부터 5까지의 자연수를 더한 후에 그 결과를 제곱한 것을 ‘합의 제곱’이라고 부른다.
 *    -> ( 1 + 2 + 3 + 4 + 5 )^2 = 225
 * 
 * 위의 결과에 따라, 1부터 5까지의 자연수에 대한 ‘제곱의 합‘과 ‘합의 제곱’의 차이는 225 - 55 = 170 이 된다.
 * 위와 같은 규칙이 있을 때, 1부터 주어진 숫자까지의 자연수에 대해 ‘제곱의 합’과 ‘합의 제곱’의 차이는 얼마인지 구해보자.
 * 
 * 
 * [실행 결과]
 * 
 * 1부터 5까지 자연수에 대한 결과는?
 * 170
 * 
"""


        
maxNumber = 5;      # 1부터 X까지의 자연수
result = 0;         # 결과를 저장할 변수
        
        
        
   # 위의 숫자를 이용하여 제곱의 합과 합의 제곱의 차이를 구한다.
        
sum1 = 0;
sum2 = 0;
        
for inx in range(1, maxNumber+1, 1):           
    square = inx * inx
    sum1 += square            
    sum2 += inx   

        
result = ( sum2 * sum2 ) - sum1 
     
        
print( "1부터 %d까지 자연수에 대한 결과는?" % (maxNumber))
print( result )
 
 
"""
 * [실습] 구구단의 합
 * 
 * 구구단 1단부터 X단까지의 모든 합을 구한다.
 * X단의 정보는 메소드의 파라미터로 전달한다.
 * X가 9보다 크면, 9로 간주한다. X가 1보다 작다면, 1로 간주한다.
 * 만약, 파라미터 X가 ‘3’ 이라면, 1단부터 3단까지의 모든 값의 합이다.
 * 만약, 파라미터 X가 ‘15’ 라면, 1단부터 9단까지의 모든 값의 합이다.
 * 단, 각 단 자체 곱의 값은 제외한다.
 * - 2단에서는 2 X 2 의 결과는 구구단의 합 최종 결과에 포함하지 않는다.
 * - 8단에서는 8 X 8 의 결과는 구구단의 합 최종 결과에 포함하지 않는다.
 * 
 * 
 * [실행 결과]
 * 
 * 입력값: 1 / 결과: 44
 * 입력값: 2 / 결과: 130
 * 입력값: 3 / 결과: 256
 * 
"""


        
maxDan = 3
result = 0
        
maxDan = int(input("입력값 : "))        
# 위의 요구사항에 맞춰 구구단의 합 결과를 구한다.
for inx in range(1, maxDan, 1):
    for jnx in range(1, 10, 1):
        if(inx != jnx):
            result += (inx * jnx)
        
print( "입력값: %d / 결과: %d" % (maxDan, result ))  


"""
 * [실습] IP 주소 알아보기
 * 
 * 32bit의 IP 주소를 입력으로 받아 8자리씩 끊어서 10진수로 바꾸어 출력해 보자.
 * 공백 없이 이진수 32자리 숫자를 입력으로 받아서 우리가 아는 형태의 IP주소인
 * 10진수.10진수.10진수.10진수 로 출력한다.
 * 
 * 
 * [실행 결과]
 * 
 * 11001011100001001110010110000000
 * IP 주소 : 203.132.229.128
 * 
"""

        
binaryIp = "11001011100001001110010110000000"
        
        
# 2진수 형태의 IP 주소를 10진수 형태의 IP 주소로 변환한다.
        
ip1 = binaryIp[0:8]
ip2 = binaryIp[8:16]
ip3 = binaryIp[16:24]
ip4 = binaryIp[24:]

inx1 = int(ip1,2)
inx2 = int(ip2,2)
inx3 = int(ip3,2)
inx4 = int(ip4,2)
        
resultIp = str(inx1) + "." + str(inx2) + "." + str(inx3) + "." + str(inx4)

print( binaryIp )
print( "IP 주소 : " + resultIp )


"""
 * [실습] 시저의 암호
 * 
 * 여러 가지 암호문 중에서 '시저의 암호'는 알파벳을 3자씩 건너 띄어 사용한다. 즉,
 *   A -> D
 *   B -> E
 *   ...
 *   Y -> B
 *   Z -> C
 * 와 같이 바꾸어 쓰는 것이다. 이렇게 하면 THEY 가 WKHB 로 바뀌게 된다.
 * 주어진 영어 문장을 시저의 암호로 바꾸도록 한다.
 * 입력 받는 영어 문장은 대소문자를모두 받을 수 있지만, 시저의 암호에서는 모든 문자를 소문자로 취급한다.
 * 
 * 
 * [실행 결과]
 * (1) ZxyHello 실행한 경우
 * ZxyHello -> cabkhoor
 
 * (2) HelloWorld 실행한 경우
 * HelloWorld -> khoorzruog
 * 
"""

original = "ZxyHello";
#original = "HelloWorld";
result = "";


#시저의 암호 방식으로 주어진 영어 문장을 변경해 보자.

for i in original :
    tmp1 = i.lower()
   
    if tmp1 >= 'x' and tmp1 <= 'z': 
        tmp = chr(ord(tmp1) - 23)        
    else :    
        tmp = chr(ord(tmp1) + 3)        
    result += tmp
    

print( original + " -> " + result );


"""
 * [실습] 시저의 암호
 * 
 * 여러 가지 암호문 중에서 '시저의 암호'는 알파벳을 3자씩 건너 띄어 사용한다. 즉,
 *   A -> D
 *   B -> E
 *   ...
 *   Y -> B
 *   Z -> C
 * 와 같이 바꾸어 쓰는 것이다. 이렇게 하면 THEY 가 WKHB 로 바뀌게 된다.
 * 주어진 영어 문장을 시저의 암호로 바꾸도록 한다.
 * 입력 받는 영어 문장은 대소문자를모두 받을 수 있지만, 시저의 암호에서는 모든 문자를 소문자로 취급한다.
 * 
 * 
 * [실행 결과]
 * (1) ZxyHello 실행한 경우
 * ZxyHello -> cabkhoor
 
 * (2) HelloWorld 실행한 경우
 * HelloWorld -> khoorzruog
 * 
"""

original = "ZxyHello";
#original = "HelloWorld";
result = "";


#시저의 암호 방식으로 주어진 영어 문장을 변경해 보자.

for i in original :
    tmp1 = i.lower()
   
    if tmp1 >= 'x' and tmp1 <= 'z': 
        tmp = chr(ord(tmp1) - 23)        
    else :    
        tmp = chr(ord(tmp1) + 3)        
    result += tmp
    

print( original + " -> " + result );
















 
 
